@inject TokenStore _tokenStore
@inject NavigationManager _navigationManager

@if (isChecking)
{
	<p>Loading...</p> @* Show a loading state while checking the token *@
}
else
{
	@ChildContent @* Render the protected content if authorized *@
}


@code {
	private bool isAuthorized = false;
	private bool isChecking = true;

	[Parameter] public RenderFragment? ChildContent { get; set; }

	override protected void OnInitialized()
	{
		// Check for token on initialization
		var token = _tokenStore.Token;

		// Set authorization based on the token presence
		isAuthorized = !string.IsNullOrEmpty(token);

		if (!isAuthorized)
		{
			// Redirect if no token is present
			_navigationManager.NavigateTo("/");
		}
		else
		{
			// Done checking, allow content to render
			isChecking = false;
		}
	}
}
